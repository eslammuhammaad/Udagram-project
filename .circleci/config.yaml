version: 2.1
orbs:
  node: circleci/node@5.0.2 
  aws-cli: circleci/aws-cli@3.1.1
  eb: circleci/aws-elastic-beanstalk@2.0.1
jobs:
  build:
    docker:
      - image: "cimg/base:stable"
    steps:
      - checkout
      - node/install
      - aws-cli/setup
      - eb/setup
      - run:
          name: Install Front-End
          command: npm run frontend:install
      - run:
          name: Install Back-End
          command: npm run backend:install
      - run:
          name: Build Front-End
          command: 
            npm run frontend:build
      - run:
          name: Build Back-End
          command: 
            npm run backend:build
      - run:
          name: set-env-variables
          command: cd udagram-api && eb init udagram-api --platform node.js --region us-east-1 && eb use udagram-api-dev && eb setenv AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID  && eb setenv AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION  && eb setenv AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY && eb setenv POSTGRES_HOST=$POSTGRES_HOST && eb setenv POSTGRES_USERNAME=$POSTGRES_USERNAME && eb setenv POSTGRES_DB=$POSTGRES_DB && eb setenv POSTGRES_PASSWORD=$POSTGRES_PASSWORD && eb setenv PORT=$PORT && eb setenv DB_PORT=$DB_PORT && eb setenv JWT_SECRET=$JWT_SECRET && cd ..
      - run:
          name: Deploy frontend
          command: 
            npm run frontend:deploy
      - run:
          name: Deploy backend
          command: 
            npm run backend:deploy  
workflows:
  workflow:                    
    jobs:
      - build:  
          filters:
            branches:
               only:                
                  - main